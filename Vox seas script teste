-- JP dos ScriptsHub Animated UI Hub (English)
-- Loadstring ready, just paste in executor

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local TweenService = game:GetService("TweenService")

local UIS = UserInputService

-- UI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "JPdosScriptsHubUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game.CoreGui

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 350)
mainFrame.Position = UDim2.new(0.5, -200, 0.3, -175)
mainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 30)
mainFrame.BorderSizePixel = 0
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.Parent = ScreenGui
mainFrame.ClipsDescendants = true
mainFrame.BackgroundTransparency = 0.2
mainFrame.Active = true
mainFrame.Draggable = true

-- Gradient Animated Background
local grad = Instance.new("UIGradient")
grad.Rotation = 45
grad.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(180, 20, 20)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(20, 180, 20)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 180))
}
grad.Parent = mainFrame

-- Animate gradient color cycling
spawn(function()
    while true do
        for i = 0, 1, 0.01 do
            grad.Offset = Vector2.new(i, 0)
            wait(0.03)
        end
        for i = 1, 0, -0.01 do
            grad.Offset = Vector2.new(i, 0)
            wait(0.03)
        end
    end
end)

-- Header Label with animated text color
local header = Instance.new("TextLabel")
header.Size = UDim2.new(1, 0, 0, 50)
header.BackgroundTransparency = 1
header.Text = "JP dos ScriptsHub"
header.Font = Enum.Font.GothamBold
header.TextSize = 30
header.TextColor3 = Color3.fromRGB(255, 100, 100)
header.Parent = mainFrame

-- Animate header color
spawn(function()
    while true do
        for i = 0, 1, 0.02 do
            header.TextColor3 = Color3.fromHSV(i, 1, 1)
            wait(0.05)
        end
    end
end)

-- Close/Open button
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 60, 0, 30)
toggleBtn.Position = UDim2.new(1, -65, 0, 10)
toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleBtn.Text = "Close"
toggleBtn.Font = Enum.Font.Gotham
toggleBtn.TextSize = 18
toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleBtn.Parent = mainFrame
toggleBtn.AutoButtonColor = false

toggleBtn.MouseEnter:Connect(function()
    TweenService:Create(toggleBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(100, 0, 0)}):Play()
end)
toggleBtn.MouseLeave:Connect(function()
    TweenService:Create(toggleBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}):Play()
end)

local uiVisible = true
toggleBtn.MouseButton1Click:Connect(function()
    if uiVisible then
        mainFrame:TweenPosition(UDim2.new(0.5, -200, 1.5, 0), "Out", "Quad", 0.5, true)
        toggleBtn.Text = "Open"
        uiVisible = false
    else
        mainFrame:TweenPosition(UDim2.new(0.5, -200, 0.3, -175), "Out", "Quad", 0.5, true)
        toggleBtn.Text = "Close"
        uiVisible = true
    end
end)

-- Utility: Create buttons with hover effect
local function createButton(text, posY)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 350, 0, 40)
    btn.Position = UDim2.new(0, 25, 0, posY)
    btn.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 20
    btn.TextColor3 = Color3.fromRGB(200, 200, 200)
    btn.Text = text
    btn.Parent = mainFrame
    btn.AutoButtonColor = false

    btn.MouseEnter:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(150, 50, 50)}):Play()
    end)
    btn.MouseLeave:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(70, 70, 90)}):Play()
    end)

    return btn
end

-- State toggles
local toggles = {
    AutoFarm = false,
    AutoQuest = false,
    HighHitbox = false
}

-- Button toggle creation
local autoFarmBtn = createButton("Toggle Auto Farm (OFF)", 80)
local autoQuestBtn = createButton("Toggle Auto Quest Accept (OFF)", 130)
local teleportBtn = createButton("Teleport to Quest NPC", 180)
local highHitboxBtn = createButton("Toggle High Hitbox (OFF)", 230)

-- Placeholders: Update these for your game's NPC names and objects
local QuestNPCName = "QuestGiverNPC"   -- Change to your NPC's name
local EnemyFolderName = "Enemies"      -- Change to your enemy folder name
local PlayerCharacter = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

-- Function to teleport player to NPC
local function teleportToNPC()
    local npc = workspace:FindFirstChild(QuestNPCName)
    if npc and npc:FindFirstChild("HumanoidRootPart") then
        PlayerCharacter:SetPrimaryPartCFrame(npc.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0))
    else
        warn("Quest NPC not found!")
    end
end

-- Function to accept quest (placeholder - customize to your game's RemoteEvent or function)
local function acceptQuest()
    -- Example: fire a RemoteEvent (replace "QuestRemoteEvent" with actual name)
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local questEvent = ReplicatedStorage:FindFirstChild("QuestRemoteEvent")
    if questEvent then
        questEvent:FireServer()
    else
        warn("QuestRemoteEvent not found!")
    end
end

-- Function to auto farm enemies near player
local function autoFarm()
    local enemyFolder = workspace:FindFirstChild(EnemyFolderName)
    if not enemyFolder then
        warn("Enemy folder not found!")
        return
    end

    for _, enemy in pairs(enemyFolder:GetChildren()) do
        if enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then
            -- Teleport to enemy
            PlayerCharacter:SetPrimaryPartCFrame(enemy.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0))
            wait(0.3)
            -- Attack logic here - this will depend on your game's combat system
            -- Example: fire a RemoteEvent to attack or simulate tool activation
            local tool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
            if tool then
                tool:Activate()
            end
            wait(0.5)
        end
    end
end

-- Function to set hitbox size (example increases enemy hitbox)
local function setHighHitbox(enabled)
    local enemyFolder = workspace:FindFirstChild(EnemyFolderName)
    if enemyFolder then
        for _, enemy in pairs(enemyFolder:GetChildren()) do
            if enemy:FindFirstChild("HumanoidRootPart") then
                if enabled then
                    enemy.HumanoidRootPart.Size = Vector3.new(10, 10, 10) -- bigger hitbox
                else
                    enemy.HumanoidRootPart.Size = Vector3.new(2, 2, 1) -- default size (adjust if needed)
                end
            end
        end
    end
end

-- Button logic toggles
autoFarmBtn.MouseButton1Click:Connect(function()
    toggles.AutoFarm = not toggles.AutoFarm
    autoFarmBtn.Text = toggles.AutoFarm and "Toggle Auto Farm (ON)" or "Toggle Auto Farm (OFF)"
end)

autoQuestBtn.MouseButton1Click:Connect(function()
    toggles.AutoQuest = not toggles.AutoQuest
    autoQuestBtn.Text = toggles.AutoQuest and "Toggle Auto Quest Accept (ON)" or "Toggle Auto Quest Accept (OFF)"
end)

teleportBtn.MouseButton1Click:Connect(function()
    teleportToNPC()
end)

highHitboxBtn.MouseButton1Click:Connect(function()
    toggles.HighHitbox = not toggles.HighHitbox
    highHitboxBtn.Text = toggles.HighHitbox and "Toggle High Hitbox (ON)" or "Toggle High Hitbox (OFF)"
    setHighHitbox(toggles.HighHitbox)
end)

-- Main loops for toggles
spawn(function()
    while true do
        wait(1)
        if toggles.AutoFarm then
            autoFarm()
        end
        if toggles.AutoQuest then
            acceptQuest()
        end
    end
end)
